name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  sonarcloud:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm install

      - name: Run SonarCloud scan
        env:
          SONAR_TOKEN: 8957e39657b5dbf3330a7296455e577ec7d67780
        run: |
          npm install -g sonarqube-scanner
          sonar-scanner \
            -Dsonar.projectKey=GYM-MANAGER \
            -Dsonar.organization=my-org \
            -Dsonar.sources=src \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=8957e39657b5dbf3330a7296455e577ec7d67780

  deploy:
    runs-on: ubuntu-latest
    needs: sonarqube
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and push Docker image
        env:
          DOCKER_USERNAME: jullyksilva
          DOCKER_PASSWORD: Liliu123@
        run: |
          echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
          docker build -t my-docker-image:latest .
          docker tag my-docker-image:latest my-docker-repo/my-docker-image:latest
          docker push my-docker-repo/my-docker-image:latest

      - name: Deploy to Render
        env:
          RENDER_API_KEY: rnd_wUOZA8ejh4qkb5HhtkklsNbn6rS6
        run: |
          curl -X POST \
            -H 'Authorization: Bearer $RENDER_API_KEY' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{"serviceId": "TCC02", "triggerType": "deploy"}' \
            https://api.render.com/v1/services/TCC02/deploys
